<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20212.21.0818.1843                               -->
<workbook original-version='18.1' source-build='2021.2.2 (20212.21.0818.1843)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='SampleSuperstore (SampleSuperstore)' inline='true' name='federated.0pm38bw18cj18k15mn5cx02l9p2t' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='SampleSuperstore' name='excel-direct.1utm9np1028ce419q4nfz1ndm1ne'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Uddeshya/OneDrive/Documents/My Tableau Repository/Workbooks/Sample Superstore.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1utm9np1028ce419q4nfz1ndm1ne' name='SampleSuperstore' table='[SampleSuperstore$]' type='table'>
          <columns gridOrigin='A1:M9995:no:A1:M9995:0' header='yes' outcome='6'>
            <column datatype='string' name='Ship Mode' ordinal='0' />
            <column datatype='string' name='Segment' ordinal='1' />
            <column datatype='string' name='Country' ordinal='2' />
            <column datatype='string' name='City' ordinal='3' />
            <column datatype='string' name='State' ordinal='4' />
            <column datatype='integer' name='Postal Code' ordinal='5' />
            <column datatype='string' name='Region' ordinal='6' />
            <column datatype='string' name='Category' ordinal='7' />
            <column datatype='string' name='Sub-Category' ordinal='8' />
            <column datatype='real' name='Sales' ordinal='9' />
            <column datatype='integer' name='Quantity' ordinal='10' />
            <column datatype='real' name='Discount' ordinal='11' />
            <column datatype='real' name='Profit' ordinal='12' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1utm9np1028ce419q4nfz1ndm1ne' name='SampleSuperstore' table='[SampleSuperstore$]' type='table'>
          <columns gridOrigin='A1:M9995:no:A1:M9995:0' header='yes' outcome='6'>
            <column datatype='string' name='Ship Mode' ordinal='0' />
            <column datatype='string' name='Segment' ordinal='1' />
            <column datatype='string' name='Country' ordinal='2' />
            <column datatype='string' name='City' ordinal='3' />
            <column datatype='string' name='State' ordinal='4' />
            <column datatype='integer' name='Postal Code' ordinal='5' />
            <column datatype='string' name='Region' ordinal='6' />
            <column datatype='string' name='Category' ordinal='7' />
            <column datatype='string' name='Sub-Category' ordinal='8' />
            <column datatype='real' name='Sales' ordinal='9' />
            <column datatype='integer' name='Quantity' ordinal='10' />
            <column datatype='real' name='Discount' ordinal='11' />
            <column datatype='real' name='Profit' ordinal='12' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[SampleSuperstore]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:M9995:no:A1:M9995:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Mode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Ship Mode]</local-name>
            <parent-name>[SampleSuperstore]</parent-name>
            <remote-alias>Ship Mode</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[SampleSuperstore_588FBF27F7E746139C73D70756089D7B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Segment</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Segment]</local-name>
            <parent-name>[SampleSuperstore]</parent-name>
            <remote-alias>Segment</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[SampleSuperstore_588FBF27F7E746139C73D70756089D7B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[SampleSuperstore]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[SampleSuperstore_588FBF27F7E746139C73D70756089D7B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[SampleSuperstore]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[SampleSuperstore_588FBF27F7E746139C73D70756089D7B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[SampleSuperstore]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[SampleSuperstore_588FBF27F7E746139C73D70756089D7B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Postal Code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Postal Code]</local-name>
            <parent-name>[SampleSuperstore]</parent-name>
            <remote-alias>Postal Code</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[SampleSuperstore_588FBF27F7E746139C73D70756089D7B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[SampleSuperstore]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[SampleSuperstore_588FBF27F7E746139C73D70756089D7B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[SampleSuperstore]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[SampleSuperstore_588FBF27F7E746139C73D70756089D7B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sub-Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Sub-Category]</local-name>
            <parent-name>[SampleSuperstore]</parent-name>
            <remote-alias>Sub-Category</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[SampleSuperstore_588FBF27F7E746139C73D70756089D7B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[SampleSuperstore]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[SampleSuperstore_588FBF27F7E746139C73D70756089D7B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Quantity]</local-name>
            <parent-name>[SampleSuperstore]</parent-name>
            <remote-alias>Quantity</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[SampleSuperstore_588FBF27F7E746139C73D70756089D7B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Discount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Discount]</local-name>
            <parent-name>[SampleSuperstore]</parent-name>
            <remote-alias>Discount</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[SampleSuperstore_588FBF27F7E746139C73D70756089D7B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[SampleSuperstore]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[SampleSuperstore_588FBF27F7E746139C73D70756089D7B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[Category]' role='dimension' type='nominal' />
      <column caption='City (copy)' datatype='string' name='[City (copy)_1210905366543872001]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
        <calculation class='tableau' formula='[City]' />
      </column>
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='Country (copy)' datatype='string' name='[Country (copy)_1210905366543855616]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
        <calculation class='tableau' formula='[Country]' />
      </column>
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='real' name='[Discount]' role='measure' type='quantitative' />
      <column aggregation='Sum' datatype='integer' default-format='*00000' name='[Postal Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
      <column caption='Region (copy)' datatype='string' name='[Region (copy)_1210905366543896578]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Region]' />
      </column>
      <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
      <column caption='State (copy)' datatype='string' name='[State (copy)_1210905366544076803]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
        <calculation class='tableau' formula='[State]' />
      </column>
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='SampleSuperstore' datatype='table' name='[__tableau_internal_object_id__].[SampleSuperstore_588FBF27F7E746139C73D70756089D7B]' role='measure' type='quantitative' />
      <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
      <column-instance column='[State (copy)_1210905366544076803]' derivation='None' name='[none:State (copy)_1210905366544076803:nk]' pivot='key' type='nominal' />
      <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
      <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
      <column-instance column='[Sales]' derivation='Sum' name='[pcto:sum:Sales:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[Discount]' derivation='Sum' name='[sum:Discount:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Quantity]' derivation='Sum' name='[sum:Quantity:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
      <group caption='Action (Category)' hidden='true' name='[Action (Category)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Category]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Exclusions (State (copy),Sub-Category)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:State (copy)_1210905366544076803:nk]' />
          <groupfilter function='level-members' level='[none:Sub-Category:nk]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Exclusions (State,Sub-Category)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:State:nk]' />
          <groupfilter function='level-members' level='[none:Sub-Category:nk]' />
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='Country_Hierarchy'>
          <field>[Country (copy)_1210905366543855616]</field>
          <field>[State (copy)_1210905366544076803]</field>
          <field>[City (copy)_1210905366543872001]</field>
          <field>[Region (copy)_1210905366543896578]</field>
        </drill-path>
      </drill-paths>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0pm38bw18cj18k15mn5cx02l9p2t].[sum:Discount:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0pm38bw18cj18k15mn5cx02l9p2t].[sum:Profit:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0pm38bw18cj18k15mn5cx02l9p2t].[none:Category:nk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0pm38bw18cj18k15mn5cx02l9p2t].[pcto:sum:Sales:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0pm38bw18cj18k15mn5cx02l9p2t].[sum:Sales:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0pm38bw18cj18k15mn5cx02l9p2t].[sum:Quantity:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Category:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Furniture&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Technology&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Office Supplies&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='SampleSuperstore' id='SampleSuperstore_588FBF27F7E746139C73D70756089D7B'>
            <properties context=''>
              <relation connection='excel-direct.1utm9np1028ce419q4nfz1ndm1ne' name='SampleSuperstore' table='[SampleSuperstore$]' type='table'>
                <columns gridOrigin='A1:M9995:no:A1:M9995:0' header='yes' outcome='6'>
                  <column datatype='string' name='Ship Mode' ordinal='0' />
                  <column datatype='string' name='Segment' ordinal='1' />
                  <column datatype='string' name='Country' ordinal='2' />
                  <column datatype='string' name='City' ordinal='3' />
                  <column datatype='string' name='State' ordinal='4' />
                  <column datatype='integer' name='Postal Code' ordinal='5' />
                  <column datatype='string' name='Region' ordinal='6' />
                  <column datatype='string' name='Category' ordinal='7' />
                  <column datatype='string' name='Sub-Category' ordinal='8' />
                  <column datatype='real' name='Sales' ordinal='9' />
                  <column datatype='integer' name='Quantity' ordinal='10' />
                  <column datatype='real' name='Discount' ordinal='11' />
                  <column datatype='real' name='Profit' ordinal='12' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <actions>
    <action caption='Filter1' name='[Action1_DF3F649D228D40809922CE91CB30C2A4]'>
      <activation type='on-select' />
      <source dashboard='Tables dashboard' type='sheet' worksheet='Category_by_sales' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Category_by_Profit,Category_by_sales' />
        <param name='special-fields' value='all' />
        <param name='target' value='Tables dashboard' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Category_by_Profit'>
      <table>
        <view>
          <datasources>
            <datasource caption='SampleSuperstore (SampleSuperstore)' name='federated.0pm38bw18cj18k15mn5cx02l9p2t' />
          </datasources>
          <datasource-dependencies datasource='federated.0pm38bw18cj18k15mn5cx02l9p2t'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0pm38bw18cj18k15mn5cx02l9p2t].[none:Category:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0pm38bw18cj18k15mn5cx02l9p2t].[sum:Profit:qk]' shelf='columns' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0pm38bw18cj18k15mn5cx02l9p2t].[none:Category:nk]' value='159' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0pm38bw18cj18k15mn5cx02l9p2t].[sum:Profit:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#f2eae1</color>
                <color>#f3e4d2</color>
                <color>#f5ddc2</color>
                <color>#f6d7b2</color>
                <color>#f8d0a2</color>
                <color>#f9c992</color>
                <color>#fac382</color>
                <color>#fcbc71</color>
                <color>#fdb560</color>
                <color>#ffae50</color>
              </color-palette>
            </encoding>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0pm38bw18cj18k15mn5cx02l9p2t].[sum:Profit:qk]' />
              <size column='[federated.0pm38bw18cj18k15mn5cx02l9p2t].[sum:Profit:qk]' />
              <text column='[federated.0pm38bw18cj18k15mn5cx02l9p2t].[sum:Profit:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0pm38bw18cj18k15mn5cx02l9p2t].[sum:Profit:qk]</rows>
        <cols>[federated.0pm38bw18cj18k15mn5cx02l9p2t].[none:Category:nk]</cols>
      </table>
      <simple-id uuid='{694BF85D-9472-44A2-8F44-F8C53245A777}' />
    </worksheet>
    <worksheet name='Category_by_sales'>
      <table>
        <view>
          <datasources>
            <datasource caption='SampleSuperstore (SampleSuperstore)' name='federated.0pm38bw18cj18k15mn5cx02l9p2t' />
          </datasources>
          <datasource-dependencies datasource='federated.0pm38bw18cj18k15mn5cx02l9p2t'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0pm38bw18cj18k15mn5cx02l9p2t].[none:Category:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0pm38bw18cj18k15mn5cx02l9p2t].[sum:Sales:qk]' shelf='columns' />
          </shelf-sorts>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0pm38bw18cj18k15mn5cx02l9p2t].[sum:Sales:qk]</rows>
        <cols>[federated.0pm38bw18cj18k15mn5cx02l9p2t].[none:Category:nk]</cols>
      </table>
      <simple-id uuid='{1060E29B-600B-406A-A599-5E9803DD8936}' />
    </worksheet>
    <worksheet name='State_by_Profit'>
      <table>
        <view>
          <datasources>
            <datasource caption='SampleSuperstore (SampleSuperstore)' name='federated.0pm38bw18cj18k15mn5cx02l9p2t' />
          </datasources>
          <datasource-dependencies datasource='federated.0pm38bw18cj18k15mn5cx02l9p2t'>
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0pm38bw18cj18k15mn5cx02l9p2t].[none:State:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:State:nk]' member='&quot;California&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;District of Columbia&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Florida&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Texas&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Virginia&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;West Virginia&quot;' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0pm38bw18cj18k15mn5cx02l9p2t].[none:State:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0pm38bw18cj18k15mn5cx02l9p2t].[sum:Profit:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0pm38bw18cj18k15mn5cx02l9p2t].[none:State:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0pm38bw18cj18k15mn5cx02l9p2t].[sum:Profit:qk]' />
              <size column='[federated.0pm38bw18cj18k15mn5cx02l9p2t].[sum:Profit:qk]' />
              <text column='[federated.0pm38bw18cj18k15mn5cx02l9p2t].[sum:Profit:qk]' />
              <lod column='[federated.0pm38bw18cj18k15mn5cx02l9p2t].[none:State:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0pm38bw18cj18k15mn5cx02l9p2t].[none:State:nk]</rows>
        <cols>[federated.0pm38bw18cj18k15mn5cx02l9p2t].[sum:Profit:qk]</cols>
      </table>
      <simple-id uuid='{9CA098E6-AA30-4121-B123-16A7383BF37F}' />
    </worksheet>
    <worksheet name='State_by_Quantity'>
      <table>
        <view>
          <datasources>
            <datasource caption='SampleSuperstore (SampleSuperstore)' name='federated.0pm38bw18cj18k15mn5cx02l9p2t' />
          </datasources>
          <datasource-dependencies datasource='federated.0pm38bw18cj18k15mn5cx02l9p2t'>
            <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
            <column caption='State (copy)' datatype='string' name='[State (copy)_1210905366544076803]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <calculation class='tableau' formula='[State]' />
            </column>
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[State (copy)_1210905366544076803]' derivation='None' name='[none:State (copy)_1210905366544076803:nk]' pivot='key' type='nominal' />
            <column-instance column='[Quantity]' derivation='Sum' name='[sum:Quantity:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0pm38bw18cj18k15mn5cx02l9p2t].[none:State (copy)_1210905366544076803:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:State (copy)_1210905366544076803:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:State (copy)_1210905366544076803:nk]' member='&quot;Alabama&quot;' />
                <groupfilter function='member' level='[none:State (copy)_1210905366544076803:nk]' member='&quot;Arizona&quot;' />
                <groupfilter function='member' level='[none:State (copy)_1210905366544076803:nk]' member='&quot;Arkansas&quot;' />
                <groupfilter function='member' level='[none:State (copy)_1210905366544076803:nk]' member='&quot;Colorado&quot;' />
                <groupfilter function='member' level='[none:State (copy)_1210905366544076803:nk]' member='&quot;Connecticut&quot;' />
                <groupfilter function='member' level='[none:State (copy)_1210905366544076803:nk]' member='&quot;Delaware&quot;' />
                <groupfilter function='member' level='[none:State (copy)_1210905366544076803:nk]' member='&quot;Florida&quot;' />
                <groupfilter function='member' level='[none:State (copy)_1210905366544076803:nk]' member='&quot;Georgia&quot;' />
                <groupfilter function='member' level='[none:State (copy)_1210905366544076803:nk]' member='&quot;Idaho&quot;' />
                <groupfilter function='member' level='[none:State (copy)_1210905366544076803:nk]' member='&quot;Illinois&quot;' />
                <groupfilter function='member' level='[none:State (copy)_1210905366544076803:nk]' member='&quot;Indiana&quot;' />
                <groupfilter function='member' level='[none:State (copy)_1210905366544076803:nk]' member='&quot;Iowa&quot;' />
                <groupfilter function='member' level='[none:State (copy)_1210905366544076803:nk]' member='&quot;Kansas&quot;' />
                <groupfilter function='member' level='[none:State (copy)_1210905366544076803:nk]' member='&quot;Kentucky&quot;' />
                <groupfilter function='member' level='[none:State (copy)_1210905366544076803:nk]' member='&quot;Louisiana&quot;' />
                <groupfilter function='member' level='[none:State (copy)_1210905366544076803:nk]' member='&quot;Maryland&quot;' />
                <groupfilter function='member' level='[none:State (copy)_1210905366544076803:nk]' member='&quot;Massachusetts&quot;' />
                <groupfilter function='member' level='[none:State (copy)_1210905366544076803:nk]' member='&quot;Michigan&quot;' />
                <groupfilter function='member' level='[none:State (copy)_1210905366544076803:nk]' member='&quot;Minnesota&quot;' />
                <groupfilter function='member' level='[none:State (copy)_1210905366544076803:nk]' member='&quot;Mississippi&quot;' />
                <groupfilter function='member' level='[none:State (copy)_1210905366544076803:nk]' member='&quot;Missouri&quot;' />
                <groupfilter function='member' level='[none:State (copy)_1210905366544076803:nk]' member='&quot;Montana&quot;' />
                <groupfilter function='member' level='[none:State (copy)_1210905366544076803:nk]' member='&quot;Nebraska&quot;' />
                <groupfilter function='member' level='[none:State (copy)_1210905366544076803:nk]' member='&quot;Nevada&quot;' />
                <groupfilter function='member' level='[none:State (copy)_1210905366544076803:nk]' member='&quot;New Jersey&quot;' />
                <groupfilter function='member' level='[none:State (copy)_1210905366544076803:nk]' member='&quot;Ohio&quot;' />
                <groupfilter function='member' level='[none:State (copy)_1210905366544076803:nk]' member='&quot;Oklahoma&quot;' />
                <groupfilter function='member' level='[none:State (copy)_1210905366544076803:nk]' member='&quot;Oregon&quot;' />
                <groupfilter function='member' level='[none:State (copy)_1210905366544076803:nk]' member='&quot;Rhode Island&quot;' />
                <groupfilter function='member' level='[none:State (copy)_1210905366544076803:nk]' member='&quot;South Carolina&quot;' />
                <groupfilter function='member' level='[none:State (copy)_1210905366544076803:nk]' member='&quot;South Dakota&quot;' />
                <groupfilter function='member' level='[none:State (copy)_1210905366544076803:nk]' member='&quot;Tennessee&quot;' />
                <groupfilter function='member' level='[none:State (copy)_1210905366544076803:nk]' member='&quot;Utah&quot;' />
                <groupfilter function='member' level='[none:State (copy)_1210905366544076803:nk]' member='&quot;Vermont&quot;' />
                <groupfilter function='member' level='[none:State (copy)_1210905366544076803:nk]' member='&quot;Virginia&quot;' />
                <groupfilter function='member' level='[none:State (copy)_1210905366544076803:nk]' member='&quot;Washington&quot;' />
                <groupfilter function='member' level='[none:State (copy)_1210905366544076803:nk]' member='&quot;Wisconsin&quot;' />
                <groupfilter function='member' level='[none:State (copy)_1210905366544076803:nk]' member='&quot;Wyoming&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0pm38bw18cj18k15mn5cx02l9p2t].[none:State (copy)_1210905366544076803:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;California&quot;</bucket>
              <bucket>&quot;New York&quot;</bucket>
              <bucket>&quot;Texas&quot;</bucket>
              <bucket>&quot;Pennsylvania&quot;</bucket>
              <bucket>&quot;Washington&quot;</bucket>
              <bucket>&quot;Illinois&quot;</bucket>
              <bucket>&quot;Ohio&quot;</bucket>
              <bucket>&quot;Florida&quot;</bucket>
              <bucket>&quot;North Carolina&quot;</bucket>
              <bucket>&quot;Michigan&quot;</bucket>
              <bucket>&quot;Virginia&quot;</bucket>
              <bucket>&quot;Arizona&quot;</bucket>
              <bucket>&quot;Georgia&quot;</bucket>
              <bucket>&quot;Colorado&quot;</bucket>
              <bucket>&quot;Tennessee&quot;</bucket>
              <bucket>&quot;Indiana&quot;</bucket>
              <bucket>&quot;Kentucky&quot;</bucket>
              <bucket>&quot;Oregon&quot;</bucket>
              <bucket>&quot;Massachusetts&quot;</bucket>
              <bucket>&quot;Wisconsin&quot;</bucket>
              <bucket>&quot;New Jersey&quot;</bucket>
              <bucket>&quot;Maryland&quot;</bucket>
              <bucket>&quot;Delaware&quot;</bucket>
              <bucket>&quot;Minnesota&quot;</bucket>
              <bucket>&quot;Connecticut&quot;</bucket>
              <bucket>&quot;Missouri&quot;</bucket>
              <bucket>&quot;Oklahoma&quot;</bucket>
              <bucket>&quot;Arkansas&quot;</bucket>
              <bucket>&quot;Mississippi&quot;</bucket>
              <bucket>&quot;Utah&quot;</bucket>
              <bucket>&quot;Rhode Island&quot;</bucket>
              <bucket>&quot;South Carolina&quot;</bucket>
              <bucket>&quot;Nevada&quot;</bucket>
              <bucket>&quot;Alabama&quot;</bucket>
              <bucket>&quot;Louisiana&quot;</bucket>
              <bucket>&quot;New Mexico&quot;</bucket>
              <bucket>&quot;Nebraska&quot;</bucket>
              <bucket>&quot;New Hampshire&quot;</bucket>
              <bucket>&quot;Iowa&quot;</bucket>
              <bucket>&quot;Kansas&quot;</bucket>
              <bucket>&quot;Idaho&quot;</bucket>
              <bucket>&quot;Montana&quot;</bucket>
              <bucket>&quot;Vermont&quot;</bucket>
              <bucket>&quot;South Dakota&quot;</bucket>
              <bucket>&quot;District of Columbia&quot;</bucket>
              <bucket>&quot;Maine&quot;</bucket>
              <bucket>&quot;North Dakota&quot;</bucket>
              <bucket>&quot;West Virginia&quot;</bucket>
              <bucket>&quot;Wyoming&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0pm38bw18cj18k15mn5cx02l9p2t].[none:State (copy)_1210905366544076803:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0pm38bw18cj18k15mn5cx02l9p2t].[sum:Quantity:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#e6e0dd</color>
                <color>#dbd0cb</color>
                <color>#d0c1b9</color>
                <color>#c6b2a9</color>
                <color>#bba499</color>
                <color>#b0968a</color>
                <color>#a6897b</color>
                <color>#9b7c6d</color>
                <color>#907061</color>
                <color>#866555</color>
              </color-palette>
            </encoding>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0pm38bw18cj18k15mn5cx02l9p2t].[sum:Quantity:qk]' />
              <size column='[federated.0pm38bw18cj18k15mn5cx02l9p2t].[sum:Quantity:qk]' />
              <text column='[federated.0pm38bw18cj18k15mn5cx02l9p2t].[sum:Quantity:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0pm38bw18cj18k15mn5cx02l9p2t].[none:State (copy)_1210905366544076803:nk]</rows>
        <cols>[federated.0pm38bw18cj18k15mn5cx02l9p2t].[sum:Quantity:qk]</cols>
      </table>
      <simple-id uuid='{4CA4B6F3-1760-44BF-A7ED-9C15CB6BE9A5}' />
    </worksheet>
    <worksheet name='State_by_Sales'>
      <table>
        <view>
          <datasources>
            <datasource caption='SampleSuperstore (SampleSuperstore)' name='federated.0pm38bw18cj18k15mn5cx02l9p2t' />
          </datasources>
          <datasource-dependencies datasource='federated.0pm38bw18cj18k15mn5cx02l9p2t'>
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0pm38bw18cj18k15mn5cx02l9p2t].[none:State:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:State:nk]' member='&quot;California&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Delaware&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;South Carolina&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;South Dakota&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Texas&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Virginia&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;West Virginia&quot;' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0pm38bw18cj18k15mn5cx02l9p2t].[none:State:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0pm38bw18cj18k15mn5cx02l9p2t].[sum:Sales:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0pm38bw18cj18k15mn5cx02l9p2t].[none:State:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0pm38bw18cj18k15mn5cx02l9p2t].[sum:Sales:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#dde7ea</color>
                <color>#cbdde3</color>
                <color>#b9d4dc</color>
                <color>#a8cbd5</color>
                <color>#98c2cf</color>
                <color>#89b9c8</color>
                <color>#7ab0c1</color>
                <color>#6ca8ba</color>
                <color>#5ea0b3</color>
                <color>#5298ad</color>
              </color-palette>
            </encoding>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0pm38bw18cj18k15mn5cx02l9p2t].[sum:Sales:qk]' />
              <size column='[federated.0pm38bw18cj18k15mn5cx02l9p2t].[sum:Sales:qk]' />
              <text column='[federated.0pm38bw18cj18k15mn5cx02l9p2t].[sum:Sales:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0pm38bw18cj18k15mn5cx02l9p2t].[sum:Sales:qk]</rows>
        <cols>[federated.0pm38bw18cj18k15mn5cx02l9p2t].[none:State:nk]</cols>
      </table>
      <simple-id uuid='{0B3CA438-FA6D-4E85-BAFE-058E0211410A}' />
    </worksheet>
    <worksheet name='State_subcategory_discount'>
      <table>
        <view>
          <datasources>
            <datasource caption='SampleSuperstore (SampleSuperstore)' name='federated.0pm38bw18cj18k15mn5cx02l9p2t' />
          </datasources>
          <datasource-dependencies datasource='federated.0pm38bw18cj18k15mn5cx02l9p2t'>
            <column datatype='real' name='[Discount]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Discount]' derivation='Sum' name='[sum:Discount:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0pm38bw18cj18k15mn5cx02l9p2t].[Exclusions (State,Sub-Category)]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:State:nk]' />
                <groupfilter function='level-members' level='[none:Sub-Category:nk]' />
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:State:nk]' member='&quot;Texas&quot;' />
                <groupfilter function='union'>
                  <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Art&quot;' />
                  <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Bookcases&quot;' />
                  <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Envelopes&quot;' />
                  <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Labels&quot;' />
                  <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Machines&quot;' />
                  <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Storage&quot;' />
                  <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Supplies&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0pm38bw18cj18k15mn5cx02l9p2t].[none:State:nk]'>
            <groupfilter function='member' level='[none:State:nk]' member='&quot;Texas&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0pm38bw18cj18k15mn5cx02l9p2t].[none:Sub-Category:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0pm38bw18cj18k15mn5cx02l9p2t].[sum:Discount:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0pm38bw18cj18k15mn5cx02l9p2t].[none:State:nk]</column>
            <column>[federated.0pm38bw18cj18k15mn5cx02l9p2t].[Exclusions (State,Sub-Category)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0pm38bw18cj18k15mn5cx02l9p2t].[sum:Discount:qk]' />
              <size column='[federated.0pm38bw18cj18k15mn5cx02l9p2t].[sum:Discount:qk]' />
              <text column='[federated.0pm38bw18cj18k15mn5cx02l9p2t].[sum:Discount:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0pm38bw18cj18k15mn5cx02l9p2t].[sum:Discount:qk]</rows>
        <cols>([federated.0pm38bw18cj18k15mn5cx02l9p2t].[none:State:nk] / [federated.0pm38bw18cj18k15mn5cx02l9p2t].[none:Sub-Category:nk])</cols>
      </table>
      <simple-id uuid='{0D6E890D-F71A-4D66-8547-FCDD6CA9D55E}' />
    </worksheet>
    <worksheet name='State_subcategory_profit'>
      <table>
        <view>
          <datasources>
            <datasource caption='SampleSuperstore (SampleSuperstore)' name='federated.0pm38bw18cj18k15mn5cx02l9p2t' />
          </datasources>
          <datasource-dependencies datasource='federated.0pm38bw18cj18k15mn5cx02l9p2t'>
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column caption='State (copy)' datatype='string' name='[State (copy)_1210905366544076803]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <calculation class='tableau' formula='[State]' />
            </column>
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[State (copy)_1210905366544076803]' derivation='None' name='[none:State (copy)_1210905366544076803:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0pm38bw18cj18k15mn5cx02l9p2t].[Exclusions (State (copy),Sub-Category)]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:State (copy)_1210905366544076803:nk]' />
                <groupfilter function='level-members' level='[none:Sub-Category:nk]' />
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:State (copy)_1210905366544076803:nk]' member='&quot;Texas&quot;' />
                <groupfilter function='union'>
                  <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Art&quot;' />
                  <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Bookcases&quot;' />
                  <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Chairs&quot;' />
                  <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Envelopes&quot;' />
                  <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Furnishings&quot;' />
                  <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Labels&quot;' />
                  <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Machines&quot;' />
                  <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Storage&quot;' />
                  <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Supplies&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0pm38bw18cj18k15mn5cx02l9p2t].[none:State:nk]'>
            <groupfilter function='member' level='[none:State:nk]' member='&quot;Texas&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0pm38bw18cj18k15mn5cx02l9p2t].[none:Sub-Category:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0pm38bw18cj18k15mn5cx02l9p2t].[sum:Profit:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0pm38bw18cj18k15mn5cx02l9p2t].[none:State:nk]</column>
            <column>[federated.0pm38bw18cj18k15mn5cx02l9p2t].[Exclusions (State (copy),Sub-Category)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0pm38bw18cj18k15mn5cx02l9p2t].[sum:Profit:qk]' />
              <size column='[federated.0pm38bw18cj18k15mn5cx02l9p2t].[sum:Profit:qk]' />
              <text column='[federated.0pm38bw18cj18k15mn5cx02l9p2t].[sum:Profit:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0pm38bw18cj18k15mn5cx02l9p2t].[sum:Profit:qk]</rows>
        <cols>([federated.0pm38bw18cj18k15mn5cx02l9p2t].[none:State (copy)_1210905366544076803:nk] / [federated.0pm38bw18cj18k15mn5cx02l9p2t].[none:Sub-Category:nk])</cols>
      </table>
      <simple-id uuid='{0B8F60DE-246A-40F4-904C-A49C4517A821}' />
    </worksheet>
    <worksheet name='SubCategory_by_Discount'>
      <table>
        <view>
          <datasources>
            <datasource caption='SampleSuperstore (SampleSuperstore)' name='federated.0pm38bw18cj18k15mn5cx02l9p2t' />
          </datasources>
          <datasource-dependencies datasource='federated.0pm38bw18cj18k15mn5cx02l9p2t'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='real' name='[Discount]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Discount]' derivation='Sum' name='[sum:Discount:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0pm38bw18cj18k15mn5cx02l9p2t].[Action (Category)]'>
            <groupfilter function='member' level='[Category]' member='&quot;Technology&quot;' user:ui-action-filter='[Action1_DF3F649D228D40809922CE91CB30C2A4]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0pm38bw18cj18k15mn5cx02l9p2t].[none:Sub-Category:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0pm38bw18cj18k15mn5cx02l9p2t].[sum:Discount:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0pm38bw18cj18k15mn5cx02l9p2t].[Action (Category)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0pm38bw18cj18k15mn5cx02l9p2t].[sum:Discount:qk]' />
              <size column='[federated.0pm38bw18cj18k15mn5cx02l9p2t].[sum:Discount:qk]' />
              <text column='[federated.0pm38bw18cj18k15mn5cx02l9p2t].[sum:Discount:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0pm38bw18cj18k15mn5cx02l9p2t].[sum:Discount:qk]</rows>
        <cols>[federated.0pm38bw18cj18k15mn5cx02l9p2t].[none:Sub-Category:nk]</cols>
      </table>
      <simple-id uuid='{7CA211C6-4186-43BF-9190-5DE20AEAA45D}' />
    </worksheet>
    <worksheet name='SubCategory_by_Profit'>
      <table>
        <view>
          <datasources>
            <datasource caption='SampleSuperstore (SampleSuperstore)' name='federated.0pm38bw18cj18k15mn5cx02l9p2t' />
          </datasources>
          <datasource-dependencies datasource='federated.0pm38bw18cj18k15mn5cx02l9p2t'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0pm38bw18cj18k15mn5cx02l9p2t].[Action (Category)]'>
            <groupfilter function='member' level='[Category]' member='&quot;Technology&quot;' user:ui-action-filter='[Action1_DF3F649D228D40809922CE91CB30C2A4]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0pm38bw18cj18k15mn5cx02l9p2t].[none:Sub-Category:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0pm38bw18cj18k15mn5cx02l9p2t].[sum:Profit:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0pm38bw18cj18k15mn5cx02l9p2t].[Action (Category)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0pm38bw18cj18k15mn5cx02l9p2t].[sum:Profit:qk]' />
              <size column='[federated.0pm38bw18cj18k15mn5cx02l9p2t].[sum:Profit:qk]' />
              <text column='[federated.0pm38bw18cj18k15mn5cx02l9p2t].[sum:Profit:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0pm38bw18cj18k15mn5cx02l9p2t].[sum:Profit:qk]</rows>
        <cols>[federated.0pm38bw18cj18k15mn5cx02l9p2t].[none:Sub-Category:nk]</cols>
      </table>
      <simple-id uuid='{4C4A764B-827A-4F81-A527-A13B99E71ADF}' />
    </worksheet>
    <worksheet name='SubCategory_bysales'>
      <table>
        <view>
          <datasources>
            <datasource caption='SampleSuperstore (SampleSuperstore)' name='federated.0pm38bw18cj18k15mn5cx02l9p2t' />
          </datasources>
          <datasource-dependencies datasource='federated.0pm38bw18cj18k15mn5cx02l9p2t'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0pm38bw18cj18k15mn5cx02l9p2t].[Action (Category)]'>
            <groupfilter function='member' level='[Category]' member='&quot;Technology&quot;' user:ui-action-filter='[Action1_DF3F649D228D40809922CE91CB30C2A4]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0pm38bw18cj18k15mn5cx02l9p2t].[none:Sub-Category:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0pm38bw18cj18k15mn5cx02l9p2t].[sum:Sales:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0pm38bw18cj18k15mn5cx02l9p2t].[Action (Category)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0pm38bw18cj18k15mn5cx02l9p2t].[sum:Sales:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#e9e9dd</color>
                <color>#e1e2cb</color>
                <color>#dadaba</color>
                <color>#d2d3a9</color>
                <color>#cacb99</color>
                <color>#c3c489</color>
                <color>#bbbc7b</color>
                <color>#b4b56d</color>
                <color>#acad60</color>
                <color>#a5a654</color>
              </color-palette>
            </encoding>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0pm38bw18cj18k15mn5cx02l9p2t].[sum:Sales:qk]' />
              <text column='[federated.0pm38bw18cj18k15mn5cx02l9p2t].[sum:Sales:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0pm38bw18cj18k15mn5cx02l9p2t].[sum:Sales:qk]</rows>
        <cols>[federated.0pm38bw18cj18k15mn5cx02l9p2t].[none:Sub-Category:nk]</cols>
      </table>
      <simple-id uuid='{D6FD4045-B5BD-4141-AE47-49B5F234663E}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Tables dashboard'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='27250' id='3' name='Category_by_sales' w='98400' x='800' y='71750'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='38625' id='5' name='Category_by_Profit' w='60800' x='38400' y='33125'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='32125' id='6' name='SubCategory_bysales' w='37600' x='800' y='1000'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='38625' id='7' name='SubCategory_by_Profit' w='37600' x='800' y='33125'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='32125' id='12' name='SubCategory_by_Discount' w='60800' x='38400' y='1000'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1350' minheight='1350' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='48' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='47' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='249' h='32125' id='6' is-fixed='true' name='SubCategory_bysales' w='37600' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='249' h='32125' id='12' is-fixed='true' name='SubCategory_by_Discount' w='60800' x='38400' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='38625' id='7' is-fixed='true' name='SubCategory_by_Profit' w='37600' x='800' y='33125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='38625' id='5' is-fixed='true' name='Category_by_Profit' w='60800' x='38400' y='33125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='210' h='27250' id='3' is-fixed='true' name='Category_by_sales' w='98400' x='800' y='71750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{AEE11E59-6156-4B58-B897-FADC14046996}' />
    </dashboard>
    <dashboard name='Texas dashboard'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='57625' id='3' name='State_subcategory_profit' w='37900' x='61300' y='41375'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='24500' id='5' name='State_subcategory_discount' w='60500' x='800' y='74500'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='40375' id='6' name='State_by_Quantity' w='60500' x='800' y='1000'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='40375' id='7' name='State_by_Profit' w='37900' x='61300' y='1000'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='33125' id='8' name='State_by_Sales' w='60500' x='800' y='41375'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1350' minheight='1350' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='44' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='43' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='40375' id='6' is-fixed='true' name='State_by_Quantity' w='60500' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='40375' id='7' is-fixed='true' name='State_by_Profit' w='37900' x='61300' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='257' h='33125' id='8' is-fixed='true' name='State_by_Sales' w='60500' x='800' y='41375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='57625' id='3' is-fixed='true' name='State_subcategory_profit' w='37900' x='61300' y='41375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='188' h='24500' id='5' is-fixed='true' name='State_subcategory_discount' w='60500' x='800' y='74500'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{FF4A812D-5254-43F9-9BD8-F72CAFA2D91E}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='44'>
    <window class='worksheet' name='Category_by_sales'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='29'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0pm38bw18cj18k15mn5cx02l9p2t].[none:Category:nk]</field>
            <field>[federated.0pm38bw18cj18k15mn5cx02l9p2t].[none:Segment:nk]</field>
            <field>[federated.0pm38bw18cj18k15mn5cx02l9p2t].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{EC05F0DB-367C-4E29-867A-09D18C8DBC83}' />
    </window>
    <window class='worksheet' name='Category_by_Profit'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='29'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0pm38bw18cj18k15mn5cx02l9p2t].[sum:Profit:qk]' type='size' />
            <card pane-specification-id='0' param='[federated.0pm38bw18cj18k15mn5cx02l9p2t].[sum:Profit:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <tuple-selection>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0pm38bw18cj18k15mn5cx02l9p2t].[none:Category:nk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0pm38bw18cj18k15mn5cx02l9p2t].[sum:Profit:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0pm38bw18cj18k15mn5cx02l9p2t].[none:Category:nk]</field>
                  <field>[federated.0pm38bw18cj18k15mn5cx02l9p2t].[sum:Profit:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Technology&quot;</value>
                <value>145454.94809999989</value>
              </tuple>
            </tuple-reference>
          </tuple-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.0pm38bw18cj18k15mn5cx02l9p2t].[none:Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{30BBF23C-9EBD-46C2-A87B-440B164CD2F6}' />
    </window>
    <window class='worksheet' name='SubCategory_bysales'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='29'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0pm38bw18cj18k15mn5cx02l9p2t].[sum:Sales:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0pm38bw18cj18k15mn5cx02l9p2t].[none:Category:nk]</field>
            <field>[federated.0pm38bw18cj18k15mn5cx02l9p2t].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CE33A98B-531E-4714-948E-76B81A670FF1}' />
    </window>
    <window class='worksheet' name='SubCategory_by_Profit'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='29'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0pm38bw18cj18k15mn5cx02l9p2t].[sum:Profit:qk]' type='size' />
            <card pane-specification-id='0' param='[federated.0pm38bw18cj18k15mn5cx02l9p2t].[sum:Profit:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0pm38bw18cj18k15mn5cx02l9p2t].[none:Category:nk]</field>
            <field>[federated.0pm38bw18cj18k15mn5cx02l9p2t].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E0B7950B-D29C-483C-A4FA-B54048AAFB3D}' />
    </window>
    <window class='worksheet' name='SubCategory_by_Discount'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='29'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0pm38bw18cj18k15mn5cx02l9p2t].[sum:Discount:qk]' type='size' />
            <card pane-specification-id='0' param='[federated.0pm38bw18cj18k15mn5cx02l9p2t].[sum:Discount:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0pm38bw18cj18k15mn5cx02l9p2t].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E3402A04-B7CD-48CC-B851-9A6D07F24332}' />
    </window>
    <window class='dashboard' name='Tables dashboard'>
      <viewpoints>
        <viewpoint name='Category_by_Profit'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Category_by_sales'>
          <zoom type='fit-width' />
        </viewpoint>
        <viewpoint name='SubCategory_by_Discount' />
        <viewpoint name='SubCategory_by_Profit'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='SubCategory_bysales' />
      </viewpoints>
      <active id='3' />
      <simple-id uuid='{E18460FD-8D4E-4493-A266-B49C4EABC51B}' />
    </window>
    <window class='worksheet' name='State_by_Quantity'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='29'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0pm38bw18cj18k15mn5cx02l9p2t].[sum:Quantity:qk]' type='size' />
            <card pane-specification-id='0' param='[federated.0pm38bw18cj18k15mn5cx02l9p2t].[sum:Quantity:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0pm38bw18cj18k15mn5cx02l9p2t].[none:Country (copy)_1210905366543855616:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D19EB895-2321-4EDB-BDCB-331E92650F6E}' />
    </window>
    <window class='worksheet' name='State_by_Profit'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='29'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0pm38bw18cj18k15mn5cx02l9p2t].[sum:Profit:qk]' type='size' />
            <card pane-specification-id='0' param='[federated.0pm38bw18cj18k15mn5cx02l9p2t].[sum:Profit:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0pm38bw18cj18k15mn5cx02l9p2t].[none:State:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{EE623F5D-D5A0-40C3-B1E1-49A8C96D3C79}' />
    </window>
    <window class='worksheet' name='State_by_Sales'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='29'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0pm38bw18cj18k15mn5cx02l9p2t].[sum:Sales:qk]' type='size' />
            <card pane-specification-id='0' param='[federated.0pm38bw18cj18k15mn5cx02l9p2t].[sum:Sales:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0pm38bw18cj18k15mn5cx02l9p2t].[none:State:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{02B3D167-51E7-4867-A2E4-78BEFB85366E}' />
    </window>
    <window class='worksheet' name='State_subcategory_profit'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='29'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0pm38bw18cj18k15mn5cx02l9p2t].[sum:Profit:qk]' type='size' />
            <card pane-specification-id='0' param='[federated.0pm38bw18cj18k15mn5cx02l9p2t].[sum:Profit:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0pm38bw18cj18k15mn5cx02l9p2t].[none:State (copy)_1210905366544076803:nk]</field>
            <field>[federated.0pm38bw18cj18k15mn5cx02l9p2t].[none:State:nk]</field>
            <field>[federated.0pm38bw18cj18k15mn5cx02l9p2t].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9B66F690-4F5E-40E7-9E79-A8388C84FEC3}' />
    </window>
    <window class='worksheet' name='State_subcategory_discount'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='29'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0pm38bw18cj18k15mn5cx02l9p2t].[sum:Discount:qk]' type='size' />
            <card pane-specification-id='0' param='[federated.0pm38bw18cj18k15mn5cx02l9p2t].[sum:Discount:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0pm38bw18cj18k15mn5cx02l9p2t].[none:State:nk]</field>
            <field>[federated.0pm38bw18cj18k15mn5cx02l9p2t].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9BB827E7-BBD8-4E05-8992-50AE4505425D}' />
    </window>
    <window class='dashboard' maximized='true' name='Texas dashboard'>
      <viewpoints>
        <viewpoint name='State_by_Profit'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='State_by_Quantity'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='State_by_Sales'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='State_subcategory_discount'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='State_subcategory_profit'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{49B7A0EB-373B-4D5C-94A0-1F751461C080}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Category_by_Profit' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Category_by_sales' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='192' name='State_by_Profit' width='192'>
      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
      Kgsc/6efMewqpW1bO2U+K5l5hR//dIY0LTgBxeampL6dHdsrsSs5oqMn+dVbQ4w3l+Nx+m4b
      4aXi8JbTtrMCT8CDVdFJT3Tx87OLxOMZij0WMSLsFrpOPpMhw8qVoKCqGcebh3l5/iqtzRto
      ba2jKHAvt1pe6rZsZ1NT4R0Wik4zNxZGLaimqjyAXZUAOwVFS28kM3fdf5yx/ihFmxso99uR
      JQnZEaCitoHx0UHmktspusMieNdJWLFYU6TvdLDEFINRDy215QQcFiQJbAVl1LWU0ndpisR9
      BsDm9uIuKsJtA7BitzooLC3B77ahSCC73DiM2I15iBSbA7evAKdFBmwUVLdQa3mHUCKNpvtu
      G+gio+g55vqP8+tLYyym8xhanGmtnpZNG8iz9jubPdDy6bksyfA86WDjiosm2iq285nP1xIO
      h5gf72ffj/djb3+Jlx4u/+ARRvZCaiu8KB9wvslroDoUZOV+zkka2YyMzSZzY/UuSUZRbVgt
      ObR7GP2hKA78ARtnp+ahtnCFQ+TIShYsinxj7S5JllDtdtRs7uMbYCJbsSoymRUulo10hGuX
      36Vr0smmxz+D3y5DYoi3j8duWoxvbXtw9wBGnmR0muGBBE1tlSs/8lSdBEurqG/eSOejT/Ds
      szuxnj/HxN32LctLq6rfsW7bKAgopDJp0qn7qUpeCouzzMwmMa4PDtdzpOKzLEQL8N7pquYG
      Cdliobi6huT5M4ys1Ap4AhRpEULJHPnlQxiaRmJ6ksVAwZ1WWV190Qmupey4rFZuP3do6TjJ
      RJLyzXvoaK6jpraW2spivPbfftKsj8uqltMwdHQ9Tz6fZn7gXV758WuE2p5nZ+nKDc+1k29w
      9OI1YlkJxSKTmZ9gRnIu3StYrTjkFLHpCaYXc2QzGXL5/D2eZSSCjc1Yhy9xvOsyM4ks2VSI
      vjNXWABkRcFqsTIyOEAilyObzZK7JScy9Tu3kzr2a965Mksmn2Nx5iqnjlxA37SNynt4gycp
      doL1u9ji7+GVlw8wHM6g5ZIsDF2ke2CCcLaSrZ06XfuPcGkyiqalme87xv6TSTp31K14wnC6
      3KRD84STGbRMnGsX3uQnb/Xe0zdyJ0Y+RzadIp3TyEQGePvVw8Qra6nye9/3VEeSZLLpNNNT
      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
    </thumbnail>
    <thumbnail height='192' name='State_by_Quantity' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='State_by_Sales' width='192'>
      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
      1YDaEQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='State_subcategory_discount' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='State_subcategory_profit' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='SubCategory_by_Discount' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='SubCategory_by_Profit' width='192'>
      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
      gyzLaDRuDu2tZMycOxkZpcVasYndRzu5JfP8RIqX04dK0GUWMiR6cF1gEQaHoPUALts5nN12
      tqxezrvLVlB6ooWA10GzP5Ih0XokSYNl2FC8TS34gYDXRePJcqrtURSMTkF7pZvmBeE7CloP
      ILudODVR3HnbXMxyDxs+3kpTbCEBg56+01ijEUPAgQLYWmrZdVZHQu50zOLQXxggQesB9OGx
      RJr1mPRadCERpMdF4UBDpLuHdp8CKHhbW/BERaADotJyWbhoPmHNxyhr6EEelN9VCde6oAXA
      HJmIwX6SyrNW7N1tnOp2YTFZGJmpo2TPcXq62ynec5oRo5P7GqU1WphQMIaTB/bQ5fYhMiD0
      t6BeB5CdHRTv2EGry0je1JlkxIeC7Odk6XbKz9hJH19EXmY8stdObWM7GcPS0WkUuusrqJOT
      GTvM0nejlbgOIHxXkiRJ4kKYoFri3aCC6okACKomAiComgiAoGoiAIKqiQAIqiYCIKiaCICg
      aiIAgqqJAAiqNqgeiv9SgRbe+MXv2NXegwYIn7iAl350G3WlH/HCCytxhxogPJ4HHn+aG0fE
      9E2m+F1U7tvIe8s30m1I5b4f/pApw2NxdbdytGQ1m8uS+fH/nkc44Gg9yT+WvsueY80k5t7A
      A4sXMjz+i15eLgwG108ArOeoTZ7G67+/i4tfF9va0s7Mn/yWRUWpV5yspWIXa0sdPPW7Vwnz
      dNONHrCy/cM1nIt04T7Rhv/8uMXrluMfcTd/+sloKta/xfJ1xfzy4TkDvWbCALpuAtDV0oij
      rYJVKxSiEtPJmziGGLOe5pOlVOrC+aglkuHj8slJj+Pi52sOlx8iLnU8JRtWoY8eyuSC8UAo
      sxY/hM5wnN+tP9w3rs4UismkQ0JCZwohzKz/XDuEweW6OQcwpeZxz6x8wsPNtJRv5OW31uMF
      xs96kILMaEIkG5/87Y/srLZe8lxBx9lqahvbMZpCaav4lDc+2g1oMBj1XF5taNINN9Kz+y0e
      +f4jvLXHxsyiicFbQWFAXDc9gDEyiSk3JvV+8I3l5cf+Th3zyc6dypDc3sEj47R8sq2cGSNm
      9D1XYI4bxvQpc7glJwa5K5Nn/mcPAWZwpacw9275mNjp3+d/nsng1O5VvL9lH+P+eXYwVk8Y
      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
    </thumbnail>
    <thumbnail height='192' name='SubCategory_bysales' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Tables dashboard' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Texas dashboard' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
